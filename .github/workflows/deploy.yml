name: Deploy to Cloud Run

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: simple-blog
  REGION: asia-northeast1
  ARTIFACT_REGISTRY_LOCATION: asia-northeast1
  REPOSITORY: simple-blog-repo

jobs:
  sync-markdown:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Sync markdown files to Firebase
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
        run: npm run sync-md

  deploy:
    needs: sync-markdown
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
        run: npm run build

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Enable Artifact Registry API
        run: |
          gcloud services enable artifactregistry.googleapis.com

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker $ARTIFACT_REGISTRY_LOCATION-docker.pkg.dev

      - name: Check and create Artifact Registry repository
        run: |
          # Check if repository exists
          if ! gcloud artifacts repositories describe $REPOSITORY --location=$ARTIFACT_REGISTRY_LOCATION --project=$PROJECT_ID >/dev/null 2>&1; then
            echo "Creating Artifact Registry repository..."
            gcloud artifacts repositories create $REPOSITORY \
              --repository-format=docker \
              --location=$ARTIFACT_REGISTRY_LOCATION \
              --description="Docker repository for Simple Blog" \
              --project=$PROJECT_ID
          else
            echo "Repository $REPOSITORY already exists"
          fi

      - name: Build Docker image
        run: |
          docker build -t $ARTIFACT_REGISTRY_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$GITHUB_SHA .

      - name: Push Docker image
        run: |
          docker push $ARTIFACT_REGISTRY_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$GITHUB_SHA

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $ARTIFACT_REGISTRY_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --port 8080 \
            --memory 2Gi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 5 \
            --project $PROJECT_ID